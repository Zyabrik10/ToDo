{"mappings":"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","sources":["src/js/todo-list.js","src/js/mw-functions.js","src/js/config/mw.js","src/controller/add-task.js","src/model/add-task.js","src/js/Component/ToDoTaskItem.js","src/js/todo-list-functions.js","src/js/config/add-task.js","node_modules/nanoid/index.browser.js","src/js/Component/ToDoItem.js","src/js/toggleToDoInfo.js","src/js/renderExactToDo.js","src/js/Component/ToDoTaskElemnt.js","src/js/setButtons.js","src/js/renderToDo.js","src/model/add-todo.js","src/js/config/add-todo.js","src/controller/add-todo.js","src/js/config/input-active.js","src/js/renderToDoList.js","src/js/config/initRenderToDoList.js"],"sourcesContent":["export const todo_list = JSON.parse(localStorage.getItem('todo-list')) || {};\n","export function hide(selector) {\n  $(selector).fadeOut();\n}\n\nexport function show(selector) {\n  $(selector).fadeIn();\n}\n\nexport function setCloseMwOnEscape() {\n  $(window).on('keydown', function closeMw(e) {\n    if (e.key === 'Escape') {\n      hide($('.mw'));\n      $(window).off('keydown');\n    }\n  });\n}\n\nexport function setCloseMwByClickingOnBackground(mwSelector) {\n  $(mwSelector).mousedown(function (e) {\n    if (e.target.classList.contains('mw')) {\n      hide($(mwSelector));\n      $(window).off('keydown');\n    }\n  });\n}\n","import {\n  setCloseMwOnEscape,\n  show,\n  setCloseMwByClickingOnBackground,\n} from '../mw-functions';\n\n$('.button-todo-add').click(function () {\n  show($('.mw.add-todo'));\n  setCloseMwOnEscape();\n});\n\nsetCloseMwByClickingOnBackground('.mw.add-todo');\n","import { addTaskModel } from '../model/add-task';\n\nexport function addTaskController() {\n  const todo_task_input = $('#add-todo .todo-task-input');\n\n  if (todo_task_input.val().trim() === '') return;\n  addTaskModel();\n}\n","import ToDoTaskItem from '../js/Component/ToDoTaskItem';\n\nexport function addTaskModel() {\n  const li = $(ToDoTaskItem());\n\n  $('#add-todo .mw-task-list').append(li);\n  $('#add-todo .mw-task-list > li:last-child').hide().fadeIn();\n\n  $('#add-todo .mw-task-remove-button').click(function () {\n    $(this).parent().fadeOut();\n    setTimeout(() => {\n      $(this).parent().remove();\n    }, 400);\n  });\n}\n","const ToDoTaskItem = () => `\n        <li>\n          <p class=\"mw-task-name global-p\">${$('.todo-task-input')\n            .val()\n            .trim()}</p>\n          <button class=\"mw-task-remove-button global-button\" type=\"button\">&times;</button>\n        </li>\n    `;\n\nexport default ToDoTaskItem;\n","import { todo_list } from '../js/todo-list';\n\nexport function saveToDoList() {\n  if (todo_list) localStorage.setItem('todo-list', JSON.stringify(todo_list));\n  else Notiflix.Notify.failure('ToDo is not saved :(');\n}\n\nexport function addToDoToList({ id, name, task_list, isDone }) {\n  todo_list[id] = {\n    name,\n    task_list,\n    isDone,\n  };\n  Notiflix.Notify.success('ToDo was successfully created');\n  saveToDoList();\n}\n\nexport function removeFromToDoList(id) {\n  delete todo_list[id];\n  Notiflix.Notify.success('ToDo was successfully removed');\n  saveToDoList();\n}\n","import { addTaskController } from '../../controller/add-task';\n\n$('.mw-task-add-button').click(function () {\n  addTaskController();\n});\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","const ToDoItem = ({ id, name, isDone, q }) =>\n  `\n  <li class=\"todo-item flex-container-item\" data-id=\"${id}\" data-q=\"${q}\">\n            <p class=\"todo-item-status ${\n              isDone ? 'done' : 'undone'\n            } global-p\">${isDone ? 'Done' : 'Undone'}</p>\n            <p class=\"todo-item-name global-p\">${name}</p>\n            <ul class=\"todo-item-buttons global-list\">\n              <li>\n                <button class=\"todo-item-button edit-todo-button global-button\" type=\"button\" data-id=\"${id}\" data-q=\"${q}\">Edit</button>\n              </li>\n              <li>\n                <button class=\"todo-item-button remove-todo-button global-button\" type=\"button\" data-id=\"${id}\" data-q=\"${q}\">Remove</button>\n              </li>\n            </ul>\n          </li>\n  `;\n\nexport default ToDoItem;\n","import { todo_list } from './todo-list';\n\nexport function toggleToDoInfo() {\n  !Object.keys(todo_list).length\n    ? $('.todo-empty-p').fadeIn()\n    : $('.todo-empty-p').fadeOut();\n}\n","import { todo_list } from './todo-list';\n\nexport function renderExactToDo({ id, q }) {\n  const li = $(`.todo-list > li[data-q=${q}]`);\n  const { name, isDone } = todo_list[id];\n\n  li.find('.todo-item-name').html(name);\n  li.find('.todo-item-status').html(isDone ? 'Done' : 'Undone');\n\n  if (isDone) {\n    li.find('.todo-item-status').addClass('done');\n    li.find('.todo-item-status').removeClass('undone');\n  } else {\n    li.find('.todo-item-status').removeClass('done');\n    li.find('.todo-item-status').addClass('undone');\n  }\n}\n","const ToDoTaskElemnt = ({ text, isDone, id }) => `\n        <li>\n          <p class=\"mw-task-name global-p\">${text}</p>\n          <input class=\"mw-task-toggle-button global-button\" type=\"checkbox\" ${\n            isDone ? 'checked' : ''\n          } data-id=\"${id}\">\n        </li>\n      `;\n\nexport default ToDoTaskElemnt;\n","import { removeFromToDoList, saveToDoList } from './todo-list-functions';\nimport { toggleToDoInfo } from './toggleToDoInfo';\nimport { todo_list } from './todo-list';\nimport {\n  show,\n  setCloseMwOnEscape,\n  setCloseMwByClickingOnBackground,\n} from './mw-functions';\nimport { renderExactToDo } from './renderExactToDo';\nimport ToDoTaskElemnt from './Component/ToDoTaskElemnt';\n\nexport function setRemoveButton() {\n  $('.remove-todo-button').click(function () {\n    removeFromToDoList($(this).attr('data-id'));\n    toggleToDoInfo();\n    $(this).parent().parent().parent().fadeOut();\n  });\n}\n\nexport function setEditButton() {\n  $('.edit-todo-button').click(function () {\n    const id = $(this).attr('data-id');\n    const q = $(this).attr('data-q');\n    const { name, task_list } = todo_list[id];\n\n    show($('.mw.edit-todo'));\n\n    // set mw closing methods\n    setCloseMwOnEscape();\n    setCloseMwByClickingOnBackground('.mw.edit-todo');\n\n    $('.mw-edit-title').text(name);\n\n    // generate blocks with task and render `em\n    let tasks = task_list.map(({ text, isDone, id }) =>\n      ToDoTaskElemnt({ text, isDone, id })\n    );\n    \n    $('.edit-todo .mw-task-list').html(tasks);\n\n    $('.mw-task-toggle-button').change(function () {\n      const button_id = Number($(this).attr('data-id'));\n\n      todo_list[id].task_list[button_id].isDone =\n        !todo_list[id].task_list[button_id].isDone;\n\n      if (todo_list[id].task_list.every(e => e.isDone))\n        todo_list[id].isDone = true;\n      else todo_list[id].isDone = false;\n\n      saveToDoList();\n      renderExactToDo({ id, q });\n    });\n  });\n}\n","import ToDoItem from './Component/ToDoItem';\nimport { setEditButton, setRemoveButton } from './setButtons';\n\nexport function renderToDo({ id, name, isDone }) {\n  $('.todo-list').append(\n    ToDoItem({ id, name, isDone, q: $('.todo-list > li').length })\n  );\n  $('.todo-list > li:last-child').hide().fadeIn();\n  setEditButton();\n  setRemoveButton();\n}\n","import { addToDoToList } from '../js/todo-list-functions';\nimport { nanoid } from 'nanoid';\nimport { renderToDo } from '../js/renderToDo';\nimport { toggleToDoInfo } from '../js/toggleToDoInfo';\nimport { hide } from '../js/mw-functions';\n\nexport function addToDoModel() {\n  const name = $('.todo-title-input').val().trim();\n  const task_list = Array.from($('.mw-added-task-list > li')).map(\n    (e, index) => {\n      return {\n        id: index,\n        isDone: false,\n        text: e.querySelector('.mw-task-name').innerText.trim(),\n      };\n    }\n  );\n\n  const obj = {\n    name,\n    task_list,\n    id: nanoid(4),\n    isDone: false,\n  };\n\n  addToDoToList(obj);\n  renderToDo(obj);\n  toggleToDoInfo();\n\n  hide('#add-todo');\n  $('.todo-title-input').val('').removeClass('active');\n  $('.todo-task-input').val('').removeClass('active');\n  $('.mw-task-list').html('');\n}\n","import { addToDoController } from '../../controller/add-todo';\n\n$('.mw-add-todo-button').click(function () {\n  addToDoController();\n});\n","import { addToDoModel } from '../model/add-todo';\n\nexport function addToDoController() {\n  if ($('#add-todo .todo-title-input').val().trim() === '') {\n    Notiflix.Notify.info('Enter title for ToDo');\n    return;\n  } else if ($('#add-todo .mw-task-list > li').length === 0) {\n    Notiflix.Notify.info('Create at least one task for ToDo');\n    return;\n  }\n\n  addToDoModel();\n}\n","$('.mw-input').blur(function () {\n  if ($(this).val().trim() !== '') $(this).addClass('active');\n  else $(this).removeClass('active');\n});\n","import { todo_list } from './todo-list';\nimport { toggleToDoInfo } from './toggleToDoInfo';\nimport ToDoItem from './Component/ToDoItem';\nimport { setEditButton, setRemoveButton } from './setButtons';\n\nexport function renderToDoList() {\n  let els = '',\n    q = 0;\n  for (let id in todo_list) {\n    const { name, isDone } = todo_list[id];\n    els += ToDoItem({ name, isDone, id, q });\n    q += 1;\n  }\n\n  $('.todo-list').html(els);\n  toggleToDoInfo();\n  setEditButton();\n  setRemoveButton();\n}\n","import { renderToDoList } from '../renderToDoList';\nrenderToDoList();\n"],"names":["$52ec1f2e70417bc0$export$f8162e36fc5fab7f","JSON","parse","localStorage","getItem","$ccfabdbc382afdb9$export$fe8985bb6374093c","selector","$","fadeOut","$ccfabdbc382afdb9$export$57bf213be019eeb0","fadeIn","$ccfabdbc382afdb9$export$3dba206982320a6c","window","on","e","key","off","$ccfabdbc382afdb9$export$3d8437da97c75988","mwSelector","mousedown","target","classList","contains","click","$45584138b0fcd2cb$export$f902a1930ab77e46","li","val","trim","concat","append","hide","this","parent","setTimeout","_this","remove","$6ebe0f23a6e64da5$export$ef58b725d6d2e127","setItem","stringify","Notiflix","Notify","failure","$6ebe0f23a6e64da5$export$40d0076a573d2c0b","param","id","name","task_list","isDone","success","$8069ef7e6126e429$export$ac4959f4f1338dfc","size","arguments","length","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","$4cde4abcbbb21e1e$export$2e2bcd8739ae039","q","$7fb43f50a70b0bbe$export$2bacc9bfcd4f67c1","Object","keys","$583ecc235e41af24$export$ed6633e798394794","_id","find","html","addClass","removeClass","$6ecc68e14e300fe0$export$2e2bcd8739ae039","text","$b2943f4a27370965$export$4dd340071b0a8247","attr","$b2943f4a27370965$export$b49f26c816765430","id1","tasks","map","change","button_id","Number","every","$6f730ba4c7488265$export$e9b77264df262494","$b74c4c69eacfa68f$export$a18631ae05c6f9ff","obj","Array","from","index","querySelector","innerText","info","blur","els"],"version":3,"file":"index.c7d277e2.js.map"}