{"mappings":"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","sources":["src/js/mw-functions.js","src/js/mw.js","src/js/input-active.js","src/js/todo-list.js","src/js/getElemntToDoItem.js","src/js/todo-list-functions.js","src/js/toggleToDoInfo.js","src/js/renderToDoList.js","src/js/setButtons.js","src/js/renderToDo.js","src/model/add-task.js","src/controller/add-task.js","src/js/generateId.js","src/model/add-todo.js","src/js/add-task.js","src/js/add-todo.js","src/controller/add-todo.js","src/index.js"],"sourcesContent":["export function hide(selector) {\n  $(selector).fadeOut();\n}\n\nexport function show(selector) {\n  $(selector).fadeIn();\n}\n\nexport function setCloseMwOnEscape() {\n  $(window).on('keydown', function closeMw(e) {\n    if (e.key === 'Escape') {\n      hide($('.mw'));\n      $(window).off('keydown');\n    }\n  });\n}\n\nexport function setCloseMwByClickingOnBackground(mwSelector) {\n  $(mwSelector).mousedown(function (e) {\n    if (e.target.classList.contains('mw')) {\n      hide($(mwSelector));\n      $(window).off('keydown');\n    }\n  });\n}\n","import {\n  setCloseMwOnEscape,\n  show,\n  hide,\n  setCloseMwByClickingOnBackground,\n} from './mw-functions';\n\n$('.button-todo-add').click(function () {\n  show($('.mw.add-todo'));\n  setCloseMwOnEscape();\n});\n\nsetCloseMwByClickingOnBackground('.mw.add-todo');\n","$('.mw-input').blur(function () {\n  if ($(this).val().trim() !== '') $(this).addClass('active');\n  else $(this).removeClass('active');\n});\n","export const todo_list = JSON.parse(localStorage.getItem('todo-list')) || {};\n","export function getElemntToDoItem({ id, name, isDone }) {\n  return `\n  <li class=\"todo-item flex-container-item\" data-id=\"${id}\">\n            <p class=\"todo-item-status ${\n              isDone ? 'done' : 'undone'\n            } global-p\">${isDone ? 'Done' : 'Undone'}</p>\n            <p class=\"todo-item-name global-p\">${name}</p>\n            <ul class=\"todo-item-buttons global-list\">\n              <li>\n                <button class=\"todo-item-button edit-todo-button global-button\" type=\"button\" data-id=\"${id}\">Edit</button>\n              </li>\n              <li>\n                <button class=\"todo-item-button remove-todo-button global-button\" type=\"button\" data-id=\"${id}\">Remove</button>\n              </li>\n            </ul>\n          </li>\n  `;\n}\n","import { todo_list } from '../js/todo-list';\n\nexport function saveToDoList() {\n  if (todo_list) localStorage.setItem('todo-list', JSON.stringify(todo_list));\n  else Notiflix.Notify.failure('ToDo is not saved :(');\n}\n\nexport function addToDoToList({ id, name, task_list, isDone }) {\n  todo_list[id] = {\n    name,\n    task_list,\n    isDone,\n  };\n  Notiflix.Notify.success('ToDo was successfully created');\n  saveToDoList();\n}\n\nexport function removeFromToDoList(id) {\n  delete todo_list[id];\n  Notiflix.Notify.success('ToDo was successfully removed');\n  saveToDoList();\n}\n","import { todo_list } from './todo-list';\n\nexport function toggleToDoInfo() {\n  !Object.keys(todo_list).length\n    ? $('.todo-empty-p').fadeIn()\n    : $('.todo-empty-p').fadeOut();\n}\n","import { todo_list } from './todo-list';\nimport { toggleToDoInfo } from './toggleToDoInfo';\nimport { getElemntToDoItem } from './getElemntToDoItem';\nimport { setEditButton, setRemoveButton } from './setButtons';\n\nexport function renderToDoList() {\n  let els = '';\n  for (let id in todo_list) {\n    const { name, isDone } = todo_list[id];\n    els += getElemntToDoItem({ name, isDone, id });\n  }\n\n  $('.todo-list').html(els);\n  toggleToDoInfo();\n  setEditButton();\n  setRemoveButton();\n}\n","import { removeFromToDoList, saveToDoList } from './todo-list-functions';\nimport { toggleToDoInfo } from './toggleToDoInfo';\nimport { todo_list } from './todo-list';\nimport { renderToDoList } from './renderToDoList';\nimport {\n  show,\n  setCloseMwOnEscape,\n  setCloseMwByClickingOnBackground,\n} from './mw-functions';\n\nexport function setRemoveButton() {\n  $('.remove-todo-button').click(function () {\n    removeFromToDoList($(this).attr('data-id'));\n    toggleToDoInfo();\n    $(this).parent().parent().parent().fadeOut();\n  });\n}\n\nexport function setEditButton() {\n  $('.edit-todo-button').click(function () {\n    const id = $(this).attr('data-id');\n    const { name, task_list } = todo_list[id];\n\n    show($('.mw.edit-todo'));\n\n    // set mw closing methods\n    setCloseMwOnEscape();\n    setCloseMwByClickingOnBackground('.mw.edit-todo');\n\n    $('.mw-edit-title').text(name);\n\n    // generate blocks with task and render `em\n    let tasks = task_list.map(({ text, isDone, id }) => {\n      return `\n        <li>\n          <p class=\"mw-task-name global-p\">${text}</p>\n          <input class=\"mw-task-toggle-button global-button\" type=\"checkbox\" ${\n            isDone ? 'checked' : ''\n          } data-id=\"${id}\">\n        </li>\n      `;\n    });\n    $('.edit-todo .mw-task-list').html(tasks);\n\n    $('.mw-task-toggle-button').change(function () {\n      const button_id = Number($(this).attr('data-id'));\n\n      todo_list[id].task_list[button_id].isDone =\n        !todo_list[id].task_list[button_id].isDone;\n\n      if (todo_list[id].task_list.every(e => e.isDone))\n        todo_list[id].isDone = true;\n      else todo_list[id].isDone = false;\n\n      saveToDoList();\n\n      $('.todo-list').html('');\n      renderToDoList();\n    });\n  });\n}\n","import { getElemntToDoItem } from './getElemntToDoItem';\nimport { setEditButton, setRemoveButton } from './setButtons';\n\nexport function renderToDo({ id, name, isDone }) {\n  $('.todo-list').append(getElemntToDoItem({ id, name, isDone }));\n  $('.todo-list > li:last-child').hide().fadeIn();\n  setEditButton();\n  setRemoveButton();\n}\n","export function addTaskModel() {\n  const li = $(`\n        <li>\n          <p class=\"mw-task-name global-p\">${$('.todo-task-input')\n            .val()\n            .trim()}</p>\n          <button class=\"mw-task-remove-button global-button\" type=\"button\">&times;</button>\n        </li>\n    `);\n\n  $('#add-todo .mw-task-list').append(li);\n  $('#add-todo .mw-task-list > li:last-child').hide().fadeIn();\n\n  $('#add-todo .mw-task-remove-button').click(function () {\n    $(this).parent().fadeOut();\n    setTimeout(() => {\n      $(this).parent().remove();\n    }, 400);\n  });\n}\n","import { addTaskModel } from '../model/add-task';\n\nexport function addTaskController() {\n  const todo_task_input = $('#add-todo .todo-task-input');\n\n  if (todo_task_input.val().trim() === '') return;\n  addTaskModel();\n}\n","export function generateId() {\n  return [...new Array(3).keys()].map(() => randInt(0, 9)).join('');\n}\n\nfunction randInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","import { addToDoToList } from '../js/todo-list-functions';\nimport { generateId } from '../js/generateId';\nimport { renderToDo } from '../js/renderToDo';\nimport { toggleToDoInfo } from '../js/toggleToDoInfo';\n\nexport function addToDoModel() {\n  const name = $('.todo-title-input').val().trim();\n  const task_list = Array.from($('.mw-added-task-list > li')).map(\n    (e, index) => {\n      return {\n        id: index,\n        isDone: false,\n        text: e.querySelector('.mw-task-name').innerText.trim(),\n      };\n    }\n  );\n\n  const obj = {\n    name,\n    task_list,\n    id: generateId(),\n    isDone: false,\n  };\n\n  addToDoToList(obj);\n  renderToDo(obj);\n  toggleToDoInfo();\n}\n","import { addTaskController } from '../controller/add-task';\n\n$('.mw-task-add-button').click(function () {\n  addTaskController();\n});\n","import { addToDoController } from '../controller/add-todo';\n\n$('.mw-add-todo-button').click(function () {\n  addToDoController();\n});\n","import { addToDoModel } from '../model/add-todo';\n\nexport function addToDoController() {\n  if ($('#add-todo .todo-title-input').val().trim() === '') {\n    Notiflix.Notify.info('Enter title for ToDo');\n    return;\n  } else if ($('#add-todo .mw-task-list > li').length === 0) {\n    Notiflix.Notify.info('Create at least one task for ToDo');\n    return;\n  }\n\n  addToDoModel();\n}\n","import './js/mw';\nimport './js/input-active';\nimport './js/todo-list';\nimport './js/renderToDo';\nimport './js/add-task';\nimport './js/add-todo';\nimport { renderToDoList } from './js/renderToDoList';\nrenderToDoList();\n"],"names":["$a85cbe619a603e49$export$fe8985bb6374093c","selector","$","fadeOut","$a85cbe619a603e49$export$57bf213be019eeb0","fadeIn","$a85cbe619a603e49$export$3dba206982320a6c","window","on","e","key","off","$a85cbe619a603e49$export$3d8437da97c75988","mwSelector","mousedown","target","classList","contains","click","blur","this","val","trim","addClass","removeClass","$a7befd106d354c8c$export$f8162e36fc5fab7f","JSON","parse","localStorage","getItem","$9d0b2f8137892efe$export$abbd3b06a67100e9","id","name","isDone","$b8ca621f9b7219f6$export$ef58b725d6d2e127","setItem","stringify","Notiflix","Notify","failure","$b8ca621f9b7219f6$export$40d0076a573d2c0b","task_list","success","$dbc7a57a287653a7$export$2bacc9bfcd4f67c1","Object","keys","length","$9c15c7a2919a6156$export$812d3928c04c52a5","els","html","$211d4ce0267e120b$export$b49f26c816765430","$211d4ce0267e120b$export$4dd340071b0a8247","attr","parent","id1","text","tasks","map","change","button_id","Number","every","$7e2d322ee5704129$export$e9b77264df262494","append","hide","$cc79e8364f4e3579$export$658533681f6f619d","li","setTimeout","remove","$9333d1e3b8b7b7b0$export$f902a1930ab77e46","$0a7ce828b8f41969$export$567fc7097e064344","Array","$0a7ce828b8f41969$var$randInt","min","max","Math","floor","random","join","$8cbd86a0903a0979$export$a18631ae05c6f9ff","obj","from","index","querySelector","innerText","info"],"version":3,"file":"index.e3daa0c5.js.map"}