const t=JSON.parse(localStorage.getItem("todo-list"))||{};function o(t){$(t).fadeOut()}function n(t){$(t).fadeIn()}function i(){$(window).on("keydown",(function(t){"Escape"===t.key&&(o($(".mw")),$(window).off("keydown"))}))}function e(t){$(t).mousedown((function(n){n.target.classList.contains("mw")&&(o($(t)),$(window).off("keydown"))}))}$(".button-todo-add").click((function(){n($(".mw.add-todo")),i()})),e(".mw.add-todo");function a(){const t=$(`\n        <li>\n          <p class="mw-task-name global-p">${$(".todo-task-input").val().trim()}</p>\n          <button class="mw-task-remove-button global-button" type="button">&times;</button>\n        </li>\n    `);$("#add-todo .mw-task-list").append(t),$("#add-todo .mw-task-list > li:last-child").hide().fadeIn(),$("#add-todo .mw-task-remove-button").click((function(){$(this).parent().fadeOut(),setTimeout((()=>{$(this).parent().remove()}),400)}))}function s(){""!==$("#add-todo .todo-task-input").val().trim()&&a()}function d(){t?localStorage.setItem("todo-list",JSON.stringify(t)):Notiflix.Notify.failure("ToDo is not saved :(")}function l({id:o,name:n,task_list:i,isDone:e}){t[o]={name:n,task_list:i,isDone:e},Notiflix.Notify.success("ToDo was successfully created"),d()}$(".mw-task-add-button").click((function(){s()}));let u=(t=21)=>crypto.getRandomValues(new Uint8Array(t)).reduce(((t,o)=>t+=(o&=63)<36?o.toString(36):o<62?(o-26).toString(36).toUpperCase():o>62?"-":"_"),"");var m=({id:t,name:o,isDone:n,q:i})=>`\n  <li class="todo-item flex-container-item" data-id="${t}" data-q="${i}">\n            <p class="todo-item-status ${n?"done":"undone"} global-p">${n?"Done":"Undone"}</p>\n            <p class="todo-item-name global-p">${o}</p>\n            <ul class="todo-item-buttons global-list">\n              <li>\n                <button class="todo-item-button edit-todo-button global-button" type="button" data-id="${t}" data-q="${i}">Edit</button>\n              </li>\n              <li>\n                <button class="todo-item-button remove-todo-button global-button" type="button" data-id="${t}" data-q="${i}">Remove</button>\n              </li>\n            </ul>\n          </li>\n  `;function c(){Object.keys(t).length?$(".todo-empty-p").fadeOut():$(".todo-empty-p").fadeIn()}function f({id:o,q:n}){const i=$(`.todo-list > li[data-q=${n}]`),{name:e,isDone:a}=t[o];i.find(".todo-item-name").html(e),i.find(".todo-item-status").html(a?"Done":"Undone"),a?(i.find(".todo-item-status").addClass("done"),i.find(".todo-item-status").removeClass("undone")):(i.find(".todo-item-status").removeClass("done"),i.find(".todo-item-status").addClass("undone"))}var r=({text:t,isDone:o,id:n})=>`\n        <li>\n          <p class="mw-task-name global-p">${t}</p>\n          <input class="mw-task-toggle-button global-button" type="checkbox" ${o?"checked":""} data-id="${n}">\n        </li>\n      `;function p(){$(".remove-todo-button").click((function(){var o;o=$(this).attr("data-id"),delete t[o],Notiflix.Notify.success("ToDo was successfully removed"),d(),c(),$(this).parent().parent().parent().fadeOut()}))}function b(){$(".edit-todo-button").click((function(){const o=$(this).attr("data-id"),a=$(this).attr("data-q"),{name:s,task_list:l}=t[o];n($(".mw.edit-todo")),i(),e(".mw.edit-todo"),$(".mw-edit-title").text(s);let u=l.map((({text:t,isDone:o,id:n})=>r({text:t,isDone:o,id:n})));$(".edit-todo .mw-task-list").html(u),$(".mw-task-toggle-button").change((function(){const n=Number($(this).attr("data-id"));t[o].task_list[n].isDone=!t[o].task_list[n].isDone,t[o].task_list.every((t=>t.isDone))?t[o].isDone=!0:t[o].isDone=!1,d(),f({id:o,q:a})}))}))}function k({id:t,name:o,isDone:n}){$(".todo-list").append(m({id:t,name:o,isDone:n,q:$(".todo-list > li").length})),$(".todo-list > li:last-child").hide().fadeIn(),b(),p()}function w(){const t={name:$(".todo-title-input").val().trim(),task_list:Array.from($(".mw-added-task-list > li")).map(((t,o)=>({id:o,isDone:!1,text:t.querySelector(".mw-task-name").innerText.trim()}))),id:u(4),isDone:!1};l(t),k(t),c(),o("#add-todo"),$(".todo-title-input").val("").removeClass("active"),$(".todo-task-input").val("").removeClass("active"),$(".mw-task-list").html("")}$(".mw-add-todo-button").click((function(){""!==$("#add-todo .todo-title-input").val().trim()?0!==$("#add-todo .mw-task-list > li").length?w():Notiflix.Notify.info("Create at least one task for ToDo"):Notiflix.Notify.info("Enter title for ToDo")})),$(".mw-input").blur((function(){""!==$(this).val().trim()?$(this).addClass("active"):$(this).removeClass("active")})),function(){let o="",n=0;for(let i in t){const{name:e,isDone:a}=t[i];o+=m({name:e,isDone:a,id:i,q:n}),n+=1}$(".todo-list").html(o),c(),b(),p()}();
//# sourceMappingURL=index.13ff401a.js.map
