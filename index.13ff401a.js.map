{"mappings":"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","sources":["src/js/todo-list.js","src/js/mw-functions.js","src/js/config/mw.js","src/model/add-task.js","src/js/Component/ToDoTaskItem.js","src/controller/add-task.js","src/js/todo-list-functions.js","src/js/config/add-task.js","node_modules/nanoid/index.browser.js","src/js/Component/ToDoItem.js","src/js/toggleToDoInfo.js","src/js/renderExactToDo.js","src/js/Component/ToDoTaskElemnt.js","src/js/setButtons.js","src/js/renderToDo.js","src/model/add-todo.js","src/js/config/add-todo.js","src/controller/add-todo.js","src/js/config/input-active.js","src/js/renderToDoList.js","src/js/config/initRenderToDoList.js"],"sourcesContent":["export const todo_list = JSON.parse(localStorage.getItem('todo-list')) || {};\n","export function hide(selector) {\n  $(selector).fadeOut();\n}\n\nexport function show(selector) {\n  $(selector).fadeIn();\n}\n\nexport function setCloseMwOnEscape() {\n  $(window).on('keydown', function closeMw(e) {\n    if (e.key === 'Escape') {\n      hide($('.mw'));\n      $(window).off('keydown');\n    }\n  });\n}\n\nexport function setCloseMwByClickingOnBackground(mwSelector) {\n  $(mwSelector).mousedown(function (e) {\n    if (e.target.classList.contains('mw')) {\n      hide($(mwSelector));\n      $(window).off('keydown');\n    }\n  });\n}\n","import {\n  setCloseMwOnEscape,\n  show,\n  setCloseMwByClickingOnBackground,\n} from '../mw-functions';\n\n$('.button-todo-add').click(function () {\n  show($('.mw.add-todo'));\n  setCloseMwOnEscape();\n});\n\nsetCloseMwByClickingOnBackground('.mw.add-todo');\n","import ToDoTaskItem from '../js/Component/ToDoTaskItem';\n\nexport function addTaskModel() {\n  const li = $(ToDoTaskItem());\n\n  $('#add-todo .mw-task-list').append(li);\n  $('#add-todo .mw-task-list > li:last-child').hide().fadeIn();\n\n  $('#add-todo .mw-task-remove-button').click(function () {\n    $(this).parent().fadeOut();\n    setTimeout(() => {\n      $(this).parent().remove();\n    }, 400);\n  });\n}\n","const ToDoTaskItem = () => `\n        <li>\n          <p class=\"mw-task-name global-p\">${$('.todo-task-input')\n            .val()\n            .trim()}</p>\n          <button class=\"mw-task-remove-button global-button\" type=\"button\">&times;</button>\n        </li>\n    `;\n\nexport default ToDoTaskItem;\n","import { addTaskModel } from '../model/add-task';\n\nexport function addTaskController() {\n  const todo_task_input = $('#add-todo .todo-task-input');\n\n  if (todo_task_input.val().trim() === '') return;\n  addTaskModel();\n}\n","import { todo_list } from '../js/todo-list';\n\nexport function saveToDoList() {\n  if (todo_list) localStorage.setItem('todo-list', JSON.stringify(todo_list));\n  else Notiflix.Notify.failure('ToDo is not saved :(');\n}\n\nexport function addToDoToList({ id, name, task_list, isDone }) {\n  todo_list[id] = {\n    name,\n    task_list,\n    isDone,\n  };\n  Notiflix.Notify.success('ToDo was successfully created');\n  saveToDoList();\n}\n\nexport function removeFromToDoList(id) {\n  delete todo_list[id];\n  Notiflix.Notify.success('ToDo was successfully removed');\n  saveToDoList();\n}\n","import { addTaskController } from '../../controller/add-task';\n\n$('.mw-task-add-button').click(function () {\n  addTaskController();\n});\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","const ToDoItem = ({ id, name, isDone, q }) =>\n  `\n  <li class=\"todo-item flex-container-item\" data-id=\"${id}\" data-q=\"${q}\">\n            <p class=\"todo-item-status ${\n              isDone ? 'done' : 'undone'\n            } global-p\">${isDone ? 'Done' : 'Undone'}</p>\n            <p class=\"todo-item-name global-p\">${name}</p>\n            <ul class=\"todo-item-buttons global-list\">\n              <li>\n                <button class=\"todo-item-button edit-todo-button global-button\" type=\"button\" data-id=\"${id}\" data-q=\"${q}\">Edit</button>\n              </li>\n              <li>\n                <button class=\"todo-item-button remove-todo-button global-button\" type=\"button\" data-id=\"${id}\" data-q=\"${q}\">Remove</button>\n              </li>\n            </ul>\n          </li>\n  `;\n\nexport default ToDoItem;\n","import { todo_list } from './todo-list';\n\nexport function toggleToDoInfo() {\n  !Object.keys(todo_list).length\n    ? $('.todo-empty-p').fadeIn()\n    : $('.todo-empty-p').fadeOut();\n}\n","import { todo_list } from './todo-list';\n\nexport function renderExactToDo({ id, q }) {\n  const li = $(`.todo-list > li[data-q=${q}]`);\n  const { name, isDone } = todo_list[id];\n\n  li.find('.todo-item-name').html(name);\n  li.find('.todo-item-status').html(isDone ? 'Done' : 'Undone');\n\n  if (isDone) {\n    li.find('.todo-item-status').addClass('done');\n    li.find('.todo-item-status').removeClass('undone');\n  } else {\n    li.find('.todo-item-status').removeClass('done');\n    li.find('.todo-item-status').addClass('undone');\n  }\n}\n","const ToDoTaskElemnt = ({ text, isDone, id }) => `\n        <li>\n          <p class=\"mw-task-name global-p\">${text}</p>\n          <input class=\"mw-task-toggle-button global-button\" type=\"checkbox\" ${\n            isDone ? 'checked' : ''\n          } data-id=\"${id}\">\n        </li>\n      `;\n\nexport default ToDoTaskElemnt;\n","import { removeFromToDoList, saveToDoList } from './todo-list-functions';\nimport { toggleToDoInfo } from './toggleToDoInfo';\nimport { todo_list } from './todo-list';\nimport {\n  show,\n  setCloseMwOnEscape,\n  setCloseMwByClickingOnBackground,\n} from './mw-functions';\nimport { renderExactToDo } from './renderExactToDo';\nimport ToDoTaskElemnt from './Component/ToDoTaskElemnt';\n\nexport function setRemoveButton() {\n  $('.remove-todo-button').click(function () {\n    removeFromToDoList($(this).attr('data-id'));\n    toggleToDoInfo();\n    $(this).parent().parent().parent().fadeOut();\n  });\n}\n\nexport function setEditButton() {\n  $('.edit-todo-button').click(function () {\n    const id = $(this).attr('data-id');\n    const q = $(this).attr('data-q');\n    const { name, task_list } = todo_list[id];\n\n    show($('.mw.edit-todo'));\n\n    // set mw closing methods\n    setCloseMwOnEscape();\n    setCloseMwByClickingOnBackground('.mw.edit-todo');\n\n    $('.mw-edit-title').text(name);\n\n    // generate blocks with task and render `em\n    let tasks = task_list.map(({ text, isDone, id }) =>\n      ToDoTaskElemnt({ text, isDone, id })\n    );\n    \n    $('.edit-todo .mw-task-list').html(tasks);\n\n    $('.mw-task-toggle-button').change(function () {\n      const button_id = Number($(this).attr('data-id'));\n\n      todo_list[id].task_list[button_id].isDone =\n        !todo_list[id].task_list[button_id].isDone;\n\n      if (todo_list[id].task_list.every(e => e.isDone))\n        todo_list[id].isDone = true;\n      else todo_list[id].isDone = false;\n\n      saveToDoList();\n      renderExactToDo({ id, q });\n    });\n  });\n}\n","import ToDoItem from './Component/ToDoItem';\nimport { setEditButton, setRemoveButton } from './setButtons';\n\nexport function renderToDo({ id, name, isDone }) {\n  $('.todo-list').append(\n    ToDoItem({ id, name, isDone, q: $('.todo-list > li').length })\n  );\n  $('.todo-list > li:last-child').hide().fadeIn();\n  setEditButton();\n  setRemoveButton();\n}\n","import { addToDoToList } from '../js/todo-list-functions';\nimport { nanoid } from 'nanoid';\nimport { renderToDo } from '../js/renderToDo';\nimport { toggleToDoInfo } from '../js/toggleToDoInfo';\nimport { hide } from '../js/mw-functions';\n\nexport function addToDoModel() {\n  const name = $('.todo-title-input').val().trim();\n  const task_list = Array.from($('.mw-added-task-list > li')).map(\n    (e, index) => {\n      return {\n        id: index,\n        isDone: false,\n        text: e.querySelector('.mw-task-name').innerText.trim(),\n      };\n    }\n  );\n\n  const obj = {\n    name,\n    task_list,\n    id: nanoid(4),\n    isDone: false,\n  };\n\n  addToDoToList(obj);\n  renderToDo(obj);\n  toggleToDoInfo();\n\n  hide('#add-todo');\n  $('.todo-title-input').val('').removeClass('active');\n  $('.todo-task-input').val('').removeClass('active');\n  $('.mw-task-list').html('');\n}\n","import { addToDoController } from '../../controller/add-todo';\n\n$('.mw-add-todo-button').click(function () {\n  addToDoController();\n});\n","import { addToDoModel } from '../model/add-todo';\n\nexport function addToDoController() {\n  if ($('#add-todo .todo-title-input').val().trim() === '') {\n    Notiflix.Notify.info('Enter title for ToDo');\n    return;\n  } else if ($('#add-todo .mw-task-list > li').length === 0) {\n    Notiflix.Notify.info('Create at least one task for ToDo');\n    return;\n  }\n\n  addToDoModel();\n}\n","$('.mw-input').blur(function () {\n  if ($(this).val().trim() !== '') $(this).addClass('active');\n  else $(this).removeClass('active');\n});\n","import { todo_list } from './todo-list';\nimport { toggleToDoInfo } from './toggleToDoInfo';\nimport ToDoItem from './Component/ToDoItem';\nimport { setEditButton, setRemoveButton } from './setButtons';\n\nexport function renderToDoList() {\n  let els = '',\n    q = 0;\n  for (let id in todo_list) {\n    const { name, isDone } = todo_list[id];\n    els += ToDoItem({ name, isDone, id, q });\n    q += 1;\n  }\n\n  $('.todo-list').html(els);\n  toggleToDoInfo();\n  setEditButton();\n  setRemoveButton();\n}\n","import { renderToDoList } from '../renderToDoList';\nrenderToDoList();\n"],"names":["$a7befd106d354c8c$export$f8162e36fc5fab7f","JSON","parse","localStorage","getItem","$a85cbe619a603e49$export$fe8985bb6374093c","selector","$","fadeOut","$a85cbe619a603e49$export$57bf213be019eeb0","fadeIn","$a85cbe619a603e49$export$3dba206982320a6c","window","on","e","key","off","$a85cbe619a603e49$export$3d8437da97c75988","mwSelector","mousedown","target","classList","contains","click","$cc79e8364f4e3579$export$658533681f6f619d","li","val","trim","append","hide","this","parent","setTimeout","remove","$9333d1e3b8b7b7b0$export$f902a1930ab77e46","$b8ca621f9b7219f6$export$ef58b725d6d2e127","setItem","stringify","Notiflix","Notify","failure","$b8ca621f9b7219f6$export$40d0076a573d2c0b","id","name","task_list","isDone","success","$cf399e049a9c4d34$export$ac4959f4f1338dfc","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","$bd8e2418137f9b9c$export$2e2bcd8739ae039","q","$dbc7a57a287653a7$export$2bacc9bfcd4f67c1","Object","keys","length","$5a428943f45f8097$export$ed6633e798394794","find","html","addClass","removeClass","$61d86d4f3187e664$export$2e2bcd8739ae039","text","$211d4ce0267e120b$export$4dd340071b0a8247","attr","$211d4ce0267e120b$export$b49f26c816765430","id1","tasks","map","change","button_id","Number","every","$7e2d322ee5704129$export$e9b77264df262494","$8cbd86a0903a0979$export$a18631ae05c6f9ff","obj","Array","from","index","querySelector","innerText","info","blur","els"],"version":3,"file":"index.13ff401a.js.map"}